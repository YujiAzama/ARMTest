{
  "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
  "contentVersion": "1.0.0.0",
  "metadata": {
    "_generator": {
      "name": "bicep",
      "version": "0.6.11.53198",
      "templateHash": "3928855353173136140"
    }
  },
  "parameters": {
    "location": {
      "type": "string",
      "defaultValue": "[resourceGroup().location]",
      "metadata": {
        "description": "Specifies the location for resources."
      }
    },
    "adminUsername": {
      "type": "string",
      "defaultValue": "testuser",
      "metadata": {
        "description": "Username for the Virtual Machine."
      }
    },
    "adminPassword": {
      "type": "secureString",
      "minLength": 12,
      "metadata": {
        "description": "Password for the Virtual Machine."
      }
    },
    "virtualNetworksName": {
      "type": "string",
      "defaultValue": "test-vnet"
    },
    "virtualMachinesName": {
      "type": "string",
      "defaultValue": "test-vm"
    },
    "networkInterfacesName": {
      "type": "string",
      "defaultValue": "test-interface"
    },
    "networkSecurityGroupsName": {
      "type": "string",
      "defaultValue": "test-sg"
    }
  },
  "resources": [
    {
      "type": "Microsoft.Compute/virtualMachines",
      "apiVersion": "2021-07-01",
      "name": "[parameters('virtualMachinesName')]",
      "location": "[parameters('location')]",
      "properties": {
        "hardwareProfile": {
          "vmSize": "Standard_B2ms"
        },
        "storageProfile": {
          "imageReference": {
            "publisher": "MicrosoftWindowsServer",
            "offer": "WindowsServer",
            "sku": "2022-datacenter-azure-edition",
            "version": "latest"
          },
          "osDisk": {
            "osType": "Windows",
            "name": "[format('{0}_OsDisk_1_34bf20d57acd4a7386a9d772306e7814', parameters('virtualMachinesName'))]",
            "createOption": "FromImage",
            "caching": "ReadWrite",
            "managedDisk": {
              "storageAccountType": "StandardSSD_LRS"
            },
            "deleteOption": "Delete",
            "diskSizeGB": 127
          },
          "dataDisks": []
        },
        "osProfile": {
          "computerName": "[parameters('virtualMachinesName')]",
          "adminUsername": "[parameters('adminUsername')]",
          "adminPassword": "[parameters('adminPassword')]",
          "windowsConfiguration": {
            "provisionVMAgent": true,
            "enableAutomaticUpdates": true,
            "patchSettings": {
              "patchMode": "AutomaticByOS",
              "assessmentMode": "ImageDefault",
              "enableHotpatching": false
            }
          },
          "secrets": [],
          "allowExtensionOperations": true
        },
        "networkProfile": {
          "networkInterfaces": [
            {
              "id": "[resourceId('Microsoft.Network/networkInterfaces', parameters('networkInterfacesName'))]"
            }
          ]
        },
        "diagnosticsProfile": {
          "bootDiagnostics": {
            "enabled": true
          }
        }
      },
      "dependsOn": [
        "[resourceId('Microsoft.Network/networkInterfaces', parameters('networkInterfacesName'))]"
      ]
    },
    {
      "type": "Microsoft.Compute/virtualMachines/extensions",
      "apiVersion": "2021-03-01",
      "name": "[format('{0}/{1}', parameters('virtualMachinesName'), 'config-app')]",
      "location": "[parameters('location')]",
      "properties": {
        "publisher": "Microsoft.Compute",
        "type": "CustomScriptExtension",
        "typeHandlerVersion": "1.10",
        "autoUpgradeMinorVersion": true,
        "settings": {
          "timestamp": 123456789
        },
        "protectedSettings": {
          "fileUris": [
            "https://raw.githubusercontent.com/YujiAzama/ARMTest/main/installPowerPlatformPackages.ps1"
          ],
          "commandToExecute": "powershell.exe -ExecutionPolicy Unrestricted -File installPowerPlatformPackages.ps1"
        }
      },
      "dependsOn": [
        "[resourceId('Microsoft.Compute/virtualMachines', parameters('virtualMachinesName'))]"
      ]
    },
    {
      "type": "Microsoft.Network/networkSecurityGroups",
      "apiVersion": "2020-11-01",
      "name": "[parameters('networkSecurityGroupsName')]",
      "location": "[parameters('location')]",
      "tags": {
        "org": "ool"
      },
      "properties": {
        "securityRules": [
          {
            "name": "AllowBastionInbound",
            "properties": {
              "protocol": "*",
              "sourcePortRange": "*",
              "sourceAddressPrefix": "10.0.255.0/27",
              "destinationAddressPrefix": "VirtualNetwork",
              "access": "Allow",
              "priority": 1001,
              "direction": "Inbound",
              "sourcePortRanges": [],
              "destinationPortRanges": [
                "22",
                "3389"
              ],
              "sourceAddressPrefixes": [],
              "destinationAddressPrefixes": []
            }
          }
        ]
      }
    },
    {
      "type": "Microsoft.Network/virtualNetworks",
      "apiVersion": "2020-11-01",
      "name": "[parameters('virtualNetworksName')]",
      "location": "[parameters('location')]",
      "properties": {
        "addressSpace": {
          "addressPrefixes": [
            "10.0.0.0/16"
          ]
        },
        "subnets": [
          {
            "name": "VMSubnet",
            "properties": {
              "addressPrefix": "10.0.1.0/28",
              "serviceEndpoints": [
                {
                  "service": "Microsoft.AzureCosmosDB",
                  "locations": [
                    "*"
                  ]
                }
              ],
              "delegations": [],
              "privateEndpointNetworkPolicies": "Disabled",
              "privateLinkServiceNetworkPolicies": "Enabled"
            }
          }
        ],
        "virtualNetworkPeerings": [],
        "enableDdosProtection": false
      }
    },
    {
      "type": "Microsoft.Network/networkSecurityGroups/securityRules",
      "apiVersion": "2020-11-01",
      "name": "[format('{0}/{1}', parameters('networkSecurityGroupsName'), 'AllowBastionInbound')]",
      "properties": {
        "protocol": "*",
        "sourcePortRange": "*",
        "sourceAddressPrefix": "10.0.255.0/27",
        "destinationAddressPrefix": "VirtualNetwork",
        "access": "Allow",
        "priority": 1001,
        "direction": "Inbound",
        "sourcePortRanges": [],
        "destinationPortRanges": [
          "22",
          "3389"
        ],
        "sourceAddressPrefixes": [],
        "destinationAddressPrefixes": []
      },
      "dependsOn": [
        "[resourceId('Microsoft.Network/networkSecurityGroups', parameters('networkSecurityGroupsName'))]"
      ]
    },
    {
      "type": "Microsoft.Network/virtualNetworks/subnets",
      "apiVersion": "2020-11-01",
      "name": "[format('{0}/{1}', parameters('virtualNetworksName'), 'VMSubnet')]",
      "properties": {
        "addressPrefix": "10.0.1.0/28",
        "serviceEndpoints": [
          {
            "service": "Microsoft.AzureCosmosDB",
            "locations": [
              "*"
            ]
          }
        ],
        "delegations": [],
        "privateEndpointNetworkPolicies": "Disabled",
        "privateLinkServiceNetworkPolicies": "Enabled"
      },
      "dependsOn": [
        "[resourceId('Microsoft.Network/virtualNetworks', parameters('virtualNetworksName'))]"
      ]
    },
    {
      "type": "Microsoft.Network/networkInterfaces",
      "apiVersion": "2020-11-01",
      "name": "[parameters('networkInterfacesName')]",
      "location": "[parameters('location')]",
      "properties": {
        "ipConfigurations": [
          {
            "name": "ipconfig1",
            "properties": {
              "privateIPAddress": "10.0.1.5",
              "privateIPAllocationMethod": "Dynamic",
              "subnet": {
                "id": "[resourceId('Microsoft.Network/virtualNetworks/subnets', parameters('virtualNetworksName'), 'VMSubnet')]"
              },
              "primary": true,
              "privateIPAddressVersion": "IPv4"
            }
          }
        ],
        "dnsSettings": {
          "dnsServers": []
        },
        "enableAcceleratedNetworking": false,
        "enableIPForwarding": false,
        "networkSecurityGroup": {
          "id": "[resourceId('Microsoft.Network/networkSecurityGroups', parameters('networkSecurityGroupsName'))]"
        }
      },
      "dependsOn": [
        "[resourceId('Microsoft.Network/networkSecurityGroups', parameters('networkSecurityGroupsName'))]",
        "[resourceId('Microsoft.Network/virtualNetworks/subnets', parameters('virtualNetworksName'), 'VMSubnet')]"
      ]
    }
  ]
}
